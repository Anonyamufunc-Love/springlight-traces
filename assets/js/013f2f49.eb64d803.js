"use strict";(self.webpackChunkspringlight_traces=self.webpackChunkspringlight_traces||[]).push([[3012],{4886:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"api/shared/global/functions/encodeURIComponent","title":"\u51fd\u6570: encodeURIComponent()","description":"encodeURIComponent(text): string","source":"@site/docs/api/shared/global/functions/encodeURIComponent.md","sourceDirName":"api/shared/global/functions","slug":"/api/shared/global/functions/encodeURIComponent","permalink":"/springlight-traces/api/shared/global/functions/encodeURIComponent","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"encodeURI","permalink":"/springlight-traces/api/shared/global/functions/encodeURI"},"next":{"title":"escape","permalink":"/springlight-traces/api/shared/global/functions/escape"}}');var r=t(4848),s=t(8453);const c={},i="\u51fd\u6570: encodeURIComponent()",a={},d=[{value:"\u53c2\u6570",id:"\u53c2\u6570",level:2},{value:"text",id:"text",level:3},{value:"\u8fd4\u56de",id:"\u8fd4\u56de",level:2}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\u51fd\u6570-encodeuricomponent",children:"\u51fd\u6570: encodeURIComponent()"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"encodeURIComponent"}),"(",(0,r.jsx)(n.code,{children:"text"}),"): ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u5b9a\u4e49\u4e8e: types-for-adobe/shared/global.d.ts:67"}),"\n",(0,r.jsx)(n.p,{children:"Encodes a string after RFC2396.\r\nCreate an UTF-8 ASCII encoded version of this string. The string is converted into UTF-8. Every non-alphanumeric character is encoded as a percent escape\r\ncharacter of the form %xx, where xx is the hex value of the character. After the conversion to UTF-8 encoding and escaping, it is guaranteed that the string does not contain characters codes greater than 127. The list of characters not to be encoded is -_.!~*'(). The method returns false on errors."}),"\n",(0,r.jsx)(n.h2,{id:"\u53c2\u6570",children:"\u53c2\u6570"}),"\n",(0,r.jsx)(n.h3,{id:"text",children:"text"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})}),"\n",(0,r.jsx)(n.p,{children:"The text to encode."}),"\n",(0,r.jsx)(n.h2,{id:"\u8fd4\u56de",children:"\u8fd4\u56de"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var o=t(6540);const r={},s=o.createContext(r);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);